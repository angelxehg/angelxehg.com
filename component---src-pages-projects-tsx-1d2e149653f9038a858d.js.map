{"version":3,"file":"component---src-pages-projects-tsx-1d2e149653f9038a858d.js","mappings":"iRA+BaA,EAAAA,SAAUC,GACrB,IAAQC,EAAwBD,EAAxBC,GAAIC,EAAoBF,EAApBE,OAAQC,EAAYH,EAAZG,QACpB,EAAmDH,EAAKI,YAAhDC,EAAI,EAAJA,KAAMC,EAAK,EAALA,MAAOC,EAAO,EAAPA,QAASC,EAAK,EAALA,MAAOC,EAAS,EAATA,UACrC,MAAO,CACLR,GAAAA,EACAS,KAAMR,EAAOQ,KACbL,KAAAA,EACAC,MAAAA,EACAH,QAAAA,EACAI,QAAAA,EACAC,MAAAA,EACAC,UAAAA,EACAE,MAAOX,EAAKI,YAAYO,MAAMC,gBAAgBC,kBAIrCC,EAAAA,SAAcC,EAASC,GAClC,OAAID,EAAEV,KAAOW,EAAEX,KACN,EAELU,EAAEV,KAAOW,EAAEX,MACL,EAEH,GAGIY,EAAAA,WA2BX,OA1BmBC,EAAAA,EAAAA,gBAAe,cAA1BC,OAyBwBC,MAE7BC,IAAItB,GACJuB,KAAKR,GACLS,QAAO,SAAAC,GAAC,OAAoB,IAAhBA,EAAEf,c,UCzEbgB,EAAc,SAClBC,GAEA,MAA+CA,EAAM1B,KAA7CU,EAAI,EAAJA,KAAMJ,EAAK,EAALA,MAAOK,EAAK,EAALA,MAAOJ,EAAO,EAAPA,QAASC,EAAK,EAALA,MACrC,OACE,gBAAC,EAAAmB,KAAI,CAACC,GAAIlB,EAAMmB,MAAO,CAAEC,eAAgB,SACvC,2BAASC,UAAU,OAAOF,MAAO,CAAEG,OAAQ,SACzC,gBAAC,EAAAC,EAAW,CAACtB,MAAOA,EAAOuB,IAAK3B,EAASwB,UAAU,iBACnD,uBAAKA,UAAU,aACM,OAAlBL,EAAMS,SACL,sBAAIJ,UAAU,iBAAiBzB,GAEd,OAAlBoB,EAAMS,SACL,sBAAIJ,UAAU,iBAAiBzB,GAEjC,qBAAGyB,UAAU,iBAAiBxB,GAC9B,qBAAGwB,UAAU,iBACVvB,EAAMa,KAAI,SAAAe,GAAQ,OACjB,wBAAMC,IAAKD,EAAUL,UAAU,gCAC5BK,WAUJE,EAAkB,WAC7B,IAAMC,EAAWtB,IAAWuB,MAAM,EAAG,GACrC,OACE,2BAASvC,GAAG,YACV,0BAAI,iBACJ,uBAAK8B,UAAU,OACZQ,EAASlB,KAAI,SAAArB,GAAI,OAChB,uBAAKqC,IAAKrC,EAAKC,GAAI8B,UAAU,wBAC3B,gBAACN,EAAW,CAACzB,KAAMA,EAAMmC,QAAQ,YAIvC,gBAAC,EAAAR,KAAI,CAACC,GAAG,aAAY,6BAkC3B,EA7BqB,WACnB,IAAMW,EAAWtB,IACjB,OACE,gBAACwB,EAAA,EAAM,KACL,gBAACC,EAAA,EAAG,CAACpC,MAAM,YAAYqC,KAAK,OAC5B,gBAAC,IAAa,MACd,uBAAKZ,UAAU,QACb,uBAAKA,UAAU,0CACb,gBAAC,EAAAJ,KAAI,CAACC,GAAG,KAAK,KAAK,uBACnB,0BAAQG,UAAU,QAChB,0BAAI,uBACJ,qBAAGA,UAAU,OAAM,6CAIzB,wBAAMA,UAAU,0CACd,uBAAKA,UAAU,OACZQ,EAASlB,KAAI,SAAArB,GAAI,OAChB,uBAAKqC,IAAKrC,EAAKC,GAAI8B,UAAU,wBAC3B,gBAACN,EAAW,CAACU,QAAQ,KAAKnC,KAAMA,UAKxC,gBAAC,IAAa","sources":["webpack://angelxehg.github.io/./src/hooks/use-pages.tsx","webpack://angelxehg.github.io/./src/pages/projects.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nexport interface RAWPage {\n  id: string\n  fields: {\n    slug: string\n  }\n  excerpt: string\n  frontmatter: {\n    title: string\n    date: string\n    image: { childImageSharp: { gatsbyImageData: IGatsbyImageData } }\n    caption: string\n    stack: string[]\n    published: boolean\n  }\n}\n\nexport interface Page {\n  id: string\n  slug: string\n  date: string\n  title: string\n  excerpt: string\n  image: IGatsbyImageData\n  caption: string\n  stack: string[]\n  published: boolean\n}\n\nexport const toPage = (item: RAWPage): Page => {\n  const { id, fields, excerpt } = item\n  const { date, title, caption, stack, published } = item.frontmatter\n  return {\n    id,\n    slug: fields.slug,\n    date,\n    title,\n    excerpt,\n    caption,\n    stack,\n    published,\n    image: item.frontmatter.image.childImageSharp.gatsbyImageData,\n  }\n}\n\nexport const sortByDate = (a: Page, b: Page) => {\n  if (a.date < b.date) {\n    return 1\n  }\n  if (a.date > b.date) {\n    return -1\n  }\n  return 0\n}\n\nexport const usePages = (): Page[] => {\n  const { allMdx } = useStaticQuery(graphql`\n    query AllProjects {\n      allMdx {\n        nodes {\n          id\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 35)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n            caption\n            stack\n            published\n          }\n        }\n      }\n    }\n  `)\n  const nodes: RAWPage[] = allMdx.nodes\n  return nodes\n    .map(toPage)\n    .sort(sortByDate)\n    .filter(i => i.published === true)\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../layouts/Layout\"\nimport DefaultFooter from \"../components/Footer\"\nimport SEO from \"../components/SEO\"\nimport { usePages, Page } from \"../hooks/use-pages\"\nimport DefaultNavbar from \"../components/Navbar\"\n\ninterface ProjectCardProps {\n  item: Page\n}\n\nconst ProjectCard = (\n  props: ProjectCardProps & { titleAs: \"h2\" | \"h3\" }\n): JSX.Element => {\n  const { slug, title, image, caption, stack } = props.item\n  return (\n    <Link to={slug} style={{ textDecoration: 'none' }}>\n      <article className=\"card\" style={{ height: \"100%\" }}>\n        <GatsbyImage image={image} alt={caption} className=\"card-img-top\" />\n        <div className=\"card-body\">\n          {props.titleAs === \"h2\" && (\n            <h2 className=\"card-title h5\">{title}</h2>\n          )}\n          {props.titleAs === \"h3\" && (\n            <h3 className=\"card-title h5\">{title}</h3>\n          )}\n          <p className=\"card-text m-0\">{caption}</p>\n          <p className=\"card-text m-0\">\n            {stack.map(toolName => (\n              <span key={toolName} className=\"badge rounded-pill mt-1 me-1\">\n                {toolName}\n              </span>\n            ))}\n          </p>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nexport const ProjectsSection = () => {\n  const projects = usePages().slice(0, 4)\n  return (\n    <section id=\"projects\">\n      <h2>Mis Proyectos</h2>\n      <div className=\"row\">\n        {projects.map(item => (\n          <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n            <ProjectCard item={item} titleAs=\"h3\" />\n          </div>\n        ))}\n      </div>\n      <Link to=\"/projects\">Ver todos los proyectos</Link>\n    </section>\n  )\n}\n\nconst ProjectsPage = (): JSX.Element => {\n  const projects = usePages()\n  return (\n    <Layout>\n      <SEO title=\"Proyectos\" lang=\"es\" />\n      <DefaultNavbar />\n      <div className=\"hero\">\n        <div className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n          <Link to=\"/\">{\"< \"}Volver a Portafolio</Link>\n          <header className=\"mt-1\">\n            <h1>Todos mis proyectos</h1>\n            <p className=\"m-0\">Estos son todos mis proyectos p√∫blicos</p>\n          </header>\n        </div>\n      </div>\n      <main className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n        <div className=\"row\">\n          {projects.map(item => (\n            <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n              <ProjectCard titleAs=\"h2\" item={item} />\n            </div>\n          ))}\n        </div>\n      </main>\n      <DefaultFooter />\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n"],"names":["toPage","item","id","fields","excerpt","frontmatter","date","title","caption","stack","published","slug","image","childImageSharp","gatsbyImageData","sortByDate","a","b","usePages","useStaticQuery","allMdx","nodes","map","sort","filter","i","ProjectCard","props","Link","to","style","textDecoration","className","height","G","alt","titleAs","toolName","key","ProjectsSection","projects","slice","Layout","SEO","lang"],"sourceRoot":""}