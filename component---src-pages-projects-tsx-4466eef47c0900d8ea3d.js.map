{"version":3,"file":"component---src-pages-projects-tsx-4466eef47c0900d8ea3d.js","mappings":"gRA+BO,MAAMA,EAAUC,IACrB,MAAM,GAAEC,EAAE,OAAEC,EAAM,QAAEC,GAAYH,GAC1B,KAAEI,EAAI,MAAEC,EAAK,QAAEC,EAAO,MAAEC,EAAK,UAAEC,GAAcR,EAAKS,YACxD,MAAO,CACLR,KACAS,KAAMR,EAAOQ,KACbN,OACAC,QACAF,UACAG,UACAC,QACAC,YACAG,MAAOX,EAAKS,YAAYE,MAAMC,gBAAgBC,gBAC/C,EAGUC,EAAaA,CAACC,EAASC,IAC9BD,EAAEX,KAAOY,EAAEZ,KACN,EAELW,EAAEX,KAAOY,EAAEZ,MACL,EAEH,EAGIa,EAAWA,KACtB,MAAM,OAAEC,IAAWC,EAAAA,EAAAA,gBAAe,cA0BlC,OADyBD,EAAOE,MAE7BC,IAAItB,GACJuB,KAAKR,GACLS,QAAOC,IAAqB,IAAhBA,EAAEhB,WAAmB,E,cCzEtC,MAAMiB,EACJC,IAEA,MAAM,KAAEhB,EAAI,MAAEL,EAAK,MAAEM,EAAK,QAAEL,EAAO,MAAEC,GAAUmB,EAAM1B,KACrD,OACE2B,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAInB,EAAMoB,MAAO,CAAEC,eAAgB,SACvCJ,EAAAA,cAAA,WAASK,UAAU,OAAOF,MAAO,CAAEG,OAAQ,SACzCN,EAAAA,cAACO,EAAAA,EAAW,CAACvB,MAAOA,EAAOwB,IAAK7B,EAAS0B,UAAU,iBACnDL,EAAAA,cAAA,OAAKK,UAAU,aACM,OAAlBN,EAAMU,SAAoBT,EAAAA,cAAA,MAAIK,UAAU,iBAAiB3B,GACvC,OAAlBqB,EAAMU,SAAoBT,EAAAA,cAAA,MAAIK,UAAU,iBAAiB3B,GAC1DsB,EAAAA,cAAA,KAAGK,UAAU,iBAAiB1B,GAC9BqB,EAAAA,cAAA,KAAGK,UAAU,iBACVzB,EAAMc,KAAIgB,GACTV,EAAAA,cAAA,QAAMW,IAAKD,EAAUL,UAAU,gCAC5BK,QAMN,EAIEE,EAAkBA,KAC7B,MAAMC,EAAWvB,IAAWwB,MAAM,EAAG,GACrC,OACEd,EAAAA,cAAA,WAAS1B,GAAG,YACV0B,EAAAA,cAAA,UAAI,wBACJA,EAAAA,cAAA,OAAKK,UAAU,OACZQ,EAASnB,KAAIrB,GACZ2B,EAAAA,cAAA,OAAKW,IAAKtC,EAAKC,GAAI+B,UAAU,wBAC3BL,EAAAA,cAACF,EAAW,CAACzB,KAAMA,EAAMoC,QAAQ,WAIvCT,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,aAAY,2BACb,EAiCd,MA7BqBa,KACnB,MAAMF,EAAWvB,IACjB,OACEU,EAAAA,cAACgB,EAAAA,EAAM,KACLhB,EAAAA,cAACiB,EAAAA,EAAG,CAACvC,MAAM,YAAYwC,KAAK,OAC5BlB,EAAAA,cAACmB,EAAAA,EAAa,MACdnB,EAAAA,cAAA,OAAKK,UAAU,QACbL,EAAAA,cAAA,OAAKK,UAAU,0CACbL,EAAAA,cAACC,EAAAA,KAAI,CAACC,GAAG,KAAK,KAAK,uBACnBF,EAAAA,cAAA,UAAQK,UAAU,QAChBL,EAAAA,cAAA,UAAI,uBACJA,EAAAA,cAAA,KAAGK,UAAU,OAAM,6CAIzBL,EAAAA,cAAA,QAAMK,UAAU,0CACdL,EAAAA,cAAA,OAAKK,UAAU,OACZQ,EAASnB,KAAIrB,GACZ2B,EAAAA,cAAA,OAAKW,IAAKtC,EAAKC,GAAI+B,UAAU,wBAC3BL,EAAAA,cAACF,EAAW,CAACW,QAAQ,KAAKpC,KAAMA,SAKxC2B,EAAAA,cAACoB,EAAAA,EAAa,MACP,C","sources":["webpack://angelxehg.github.io/./src/hooks/use-pages.tsx","webpack://angelxehg.github.io/./src/pages/projects.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nexport interface RAWPage {\n  id: string\n  fields: {\n    slug: string\n  }\n  excerpt: string\n  frontmatter: {\n    title: string\n    date: string\n    image: { childImageSharp: { gatsbyImageData: IGatsbyImageData } }\n    caption: string\n    stack: string[]\n    published: boolean\n  }\n}\n\nexport interface Page {\n  id: string\n  slug: string\n  date: string\n  title: string\n  excerpt: string\n  image: IGatsbyImageData\n  caption: string\n  stack: string[]\n  published: boolean\n}\n\nexport const toPage = (item: RAWPage): Page => {\n  const { id, fields, excerpt } = item\n  const { date, title, caption, stack, published } = item.frontmatter\n  return {\n    id,\n    slug: fields.slug,\n    date,\n    title,\n    excerpt,\n    caption,\n    stack,\n    published,\n    image: item.frontmatter.image.childImageSharp.gatsbyImageData,\n  }\n}\n\nexport const sortByDate = (a: Page, b: Page) => {\n  if (a.date < b.date) {\n    return 1\n  }\n  if (a.date > b.date) {\n    return -1\n  }\n  return 0\n}\n\nexport const usePages = (): Page[] => {\n  const { allMdx } = useStaticQuery(graphql`\n    query AllProjects {\n      allMdx {\n        nodes {\n          id\n          fields {\n            slug\n          }\n          excerpt(pruneLength: 35)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n            caption\n            stack\n            published\n          }\n        }\n      }\n    }\n  `)\n  const nodes: RAWPage[] = allMdx.nodes\n  return nodes\n    .map(toPage)\n    .sort(sortByDate)\n    .filter(i => i.published === true)\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../layouts/Layout\"\nimport DefaultFooter from \"../components/Footer\"\nimport SEO from \"../components/SEO\"\nimport { usePages, Page } from \"../hooks/use-pages\"\nimport DefaultNavbar from \"../components/Navbar\"\n\ninterface ProjectCardProps {\n  item: Page\n}\n\nconst ProjectCard = (\n  props: ProjectCardProps & { titleAs: \"h2\" | \"h3\" },\n): JSX.Element => {\n  const { slug, title, image, caption, stack } = props.item\n  return (\n    <Link to={slug} style={{ textDecoration: \"none\" }}>\n      <article className=\"card\" style={{ height: \"100%\" }}>\n        <GatsbyImage image={image} alt={caption} className=\"card-img-top\" />\n        <div className=\"card-body\">\n          {props.titleAs === \"h2\" && <h2 className=\"card-title h5\">{title}</h2>}\n          {props.titleAs === \"h3\" && <h3 className=\"card-title h5\">{title}</h3>}\n          <p className=\"card-text m-0\">{caption}</p>\n          <p className=\"card-text m-0\">\n            {stack.map(toolName => (\n              <span key={toolName} className=\"badge rounded-pill mt-1 me-1\">\n                {toolName}\n              </span>\n            ))}\n          </p>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nexport const ProjectsSection = () => {\n  const projects = usePages().slice(0, 4)\n  return (\n    <section id=\"projects\">\n      <h2>Proyectos personales</h2>\n      <div className=\"row\">\n        {projects.map(item => (\n          <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n            <ProjectCard item={item} titleAs=\"h3\" />\n          </div>\n        ))}\n      </div>\n      <Link to=\"/projects\">Ver todos los proyectos</Link>\n    </section>\n  )\n}\n\nconst ProjectsPage = (): JSX.Element => {\n  const projects = usePages()\n  return (\n    <Layout>\n      <SEO title=\"Proyectos\" lang=\"es\" />\n      <DefaultNavbar />\n      <div className=\"hero\">\n        <div className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n          <Link to=\"/\">{\"< \"}Volver a Portafolio</Link>\n          <header className=\"mt-1\">\n            <h1>Todos mis proyectos</h1>\n            <p className=\"m-0\">Estos son todos mis proyectos p√∫blicos</p>\n          </header>\n        </div>\n      </div>\n      <main className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n        <div className=\"row\">\n          {projects.map(item => (\n            <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n              <ProjectCard titleAs=\"h2\" item={item} />\n            </div>\n          ))}\n        </div>\n      </main>\n      <DefaultFooter />\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n"],"names":["toPage","item","id","fields","excerpt","date","title","caption","stack","published","frontmatter","slug","image","childImageSharp","gatsbyImageData","sortByDate","a","b","usePages","allMdx","useStaticQuery","nodes","map","sort","filter","i","ProjectCard","props","React","Link","to","style","textDecoration","className","height","GatsbyImage","alt","titleAs","toolName","key","ProjectsSection","projects","slice","ProjectsPage","Layout","SEO","lang","DefaultNavbar","DefaultFooter"],"sourceRoot":""}