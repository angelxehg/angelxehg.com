{"componentChunkName":"component---src-templates-page-tsx","path":"/projects/djangofire/","result":{"data":{"mdx":{"body":"var _excluded = [\"components\"];\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Djangofire\",\n  \"date\": \"2021-05-22T00:00:00.000Z\",\n  \"image\": \"../images/djangofire.png\",\n  \"caption\": \"Demostración de Firebase Auth en una API REST\",\n  \"stack\": [\"React\", \"Firebase\", \"TypeScript\", \"Django\"],\n  \"published\": true\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, _excluded);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://firebase.google.com/\"\n  }, \"Firebase\"), \" nos ofrece una gran variedad de servicios y funcionalidades para implementar en nuestras aplicaciones, las cuales abarcan desde el desarrollo hasta la implementaci\\xF3n y el crecimiento de nuestras aplicaciones.\"), mdx(\"p\", null, \"Uno de los servicios m\\xE1s populares es \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://firebase.google.com/docs/firestore\"\n  }, \"Firestore\"), \", el cual nos ofrece una base de datos NoSQL r\\xE1pida, confiable y asequible. Sin embargo, existen ocasiones en las que necesitaremos de utilizar una base de datos relacional, ya sea por los requerimientos de desarrollo, o para integrar un backend o una API \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"legacy\"), \". Para este prop\\xF3sito Firebase nos permite generar un token JWT, con el cual podemos autenticar a nuestros usuarios en nuestras API REST.\"), mdx(\"h2\", null, \"La idea\"), mdx(\"p\", null, \"El prop\\xF3sito principal de este proyecto fue aplicar este concepto con una PWA, con la cual implementar\\xEDa el Inicio de sesi\\xF3n de Google, y que esta identidad se pueda usar con una API creada con \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://www.djangoproject.com/\"\n  }, \"Django\"), \". Las funciones principales son:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"PWA hecha con React y soporte Offline\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Inicio de sesi\\xF3n con Google\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Validaci\\xF3n de token JWT de Firebase\")), mdx(\"h2\", null, \"Validando JWT de terceros\"), mdx(\"p\", null, \"En muchos proyectos de la Universidad hab\\xEDa utilizado autenticaci\\xF3n con JWT, sim embargo nunca me detuve a pensar que era exactamente JWT. Y me sorprend\\xED al descubrir que un Token JWT funciona de manera similar a una clave SSH: Un JWT puede ser le\\xEDdo por cualquier aplicaci\\xF3n, y as\\xED leer la informaci\\xF3n o \", mdx(\"em\", {\n    parentName: \"p\"\n  }, \"payload\"), \" que este contiene (regularmente algunos datos b\\xE1sicos del usuario, y un tiempo de expiraci\\xF3n). Pero lo interesante es que contiene una firma p\\xFAblica, mediante la cual se puede validar la autenticidad del Token. Esto solo se puede hacer conociendo la clave con la que se firm\\xF3.\"), mdx(\"p\", null, \"Sim embargo para validar un token de Firebase se requieren algunos pasos adicionales, como generar una clave privada, instalar algunas librer\\xEDas en el proyecto de Django, y utilizar la clave privada de manera segura. En este \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://dev.to/angelxehg/usando-firebase-para-autenticar-en-django-rest-framework-n1b\"\n  }, \"art\\xEDculo de dev.to\"), \" describo detalladamente como realic\\xE9 este proyecto\"), mdx(\"h2\", null, \"Recursos y referencias\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://dev.to/angelxehg/usando-firebase-para-autenticar-en-django-rest-framework-n1b\"\n  }, \"Gu\\xEDa r\\xE1pida para autenticar en Django REST Framework usando Firebase Auth\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://jwt.io/\"\n  }, \"JSON Web Tokens\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://djangofire.netlify.app/\"\n  }, \"Demostraci\\xF3n PWA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/angelxehg/djangofire-pwa/\"\n  }, \"C\\xF3digo fuente PWA\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://github.com/angelxehg/djangofire-api/\"\n  }, \"C\\xF3digo fuente API\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"https://pypi.org/project/drf-firebase-auth/\"\n  }, \"Librer\\xEDa drf-firebase-auth\"))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"title":"Djangofire","date":"2021-05-22","image":{"childImageSharp":{"gatsbyImageData":{"layout":"fullWidth","backgroundColor":"#585858","images":{"fallback":{"src":"/static/1906d0d60458947ca222259b787148d6/b5380/djangofire.png","srcSet":"/static/1906d0d60458947ca222259b787148d6/5b584/djangofire.png 750w,\n/static/1906d0d60458947ca222259b787148d6/c1f05/djangofire.png 1080w,\n/static/1906d0d60458947ca222259b787148d6/b5380/djangofire.png 1200w","sizes":"100vw"},"sources":[{"srcSet":"/static/1906d0d60458947ca222259b787148d6/73e0d/djangofire.webp 750w,\n/static/1906d0d60458947ca222259b787148d6/9fede/djangofire.webp 1080w,\n/static/1906d0d60458947ca222259b787148d6/81547/djangofire.webp 1200w","type":"image/webp","sizes":"100vw"}]},"width":1,"height":0.525}}},"stack":["React","Firebase","TypeScript","Django"],"caption":"Demostración de Firebase Auth en una API REST"}}},"pageContext":{"id":"d8ec0b11-14f7-5321-8b78-e133e51668c7"}},"staticQueryHashes":["914163225"]}