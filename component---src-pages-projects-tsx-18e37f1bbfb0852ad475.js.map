{"version":3,"file":"component---src-pages-projects-tsx-18e37f1bbfb0852ad475.js","mappings":"iRA6BaA,EAAS,SAACC,GACrB,IAAQC,EAAsBD,EAA9B,GAAYE,EAAkBF,EAA9B,KAAkBG,EAAYH,EAA9B,QACA,EAAmDA,EAAnD,YACA,MAAO,CACLC,GADK,EAELC,KAFK,EAGLE,KAJF,OAKEC,MALF,QAMEF,QALK,EAMLG,QAPF,UAQEC,MARF,QASEC,UATF,YAUEC,MAAOT,EAAAA,YAAAA,MAAAA,gBAAuCU,kBAIrCC,EAAa,SAACC,EAAD,GACxB,OAAIA,EAAAA,KAASC,EAAb,KACS,EAELD,EAAAA,KAASC,EAAb,MACE,EAEK,GAGIC,EAAW,WAyBtB,OAxBmBC,EAAAA,EAAAA,gBAAnB,oBAuBA,MACO,uBAGG,SAAAC,GAAC,WAAIA,EAAAA,c,SCrEXC,EAAc,SAAC,GAGnB,MAA+CC,EAA/C,KAAQhB,EAAR,OAAcG,EAAd,QAAqBI,EAArB,QAA4BH,EAA5B,UAAqCC,EAArC,QACA,OACE,wBAAMY,GAAE,IAAR,EAAsBC,MAAO,CAAEC,eAAgB,SAC7C,2BAASC,UAAT,OAA0BF,MAAO,CAAEG,OAAQ,SACzC,qBAAad,MAAb,EAA2Be,IAA3B,EAAyCF,UAAU,iBACnD,uBAAKA,UAAU,aACZJ,OAAAA,EAAAA,SACC,sBAAII,UAAU,iBAFlB,GAIGJ,OAAAA,EAAAA,SACC,sBAAII,UAAU,iBALlB,GAOE,qBAAGA,UAAU,iBAPf,GAQE,qBAAGA,UAAU,iBACVf,EAAA,KAAU,SAAAkB,GAAQ,OACjB,wBAAMC,IAAN,EAAqBJ,UAAU,gCADd,WAYlBK,EAAkB,WAC7B,IAAMC,EAAWd,IAAAA,MAAAA,EAAjB,GACA,OACE,2BAASb,GAAG,YACV,0BADF,iBAEE,uBAAKqB,UAAU,OACZM,EAAA,KAAa,SAAA5B,GAAI,OAChB,uBAAK0B,IAAK1B,EAAV,GAAmBsB,UAAU,wBAC3B,mBAAatB,KAAb,EAAyB6B,QAAQ,YAIvC,wBAAMV,GAAG,aAVb,6BA4CF,EA7BqB,WACnB,IAAMS,EAAWd,IACjB,OACE,yBACE,qBAAKT,MAAL,YAAuByB,KAAK,OAC5B,oBAFF,MAGE,uBAAKR,UAAU,QACb,uBAAKA,UAAU,0CACb,wBAAMH,GAAG,KAAT,KADF,uBAEE,0BAAQG,UAAU,QAChB,0BADF,uBAEE,qBAAGA,UAAU,OARrB,6CAYE,wBAAMA,UAAU,0CACd,uBAAKA,UAAU,OACZM,EAAA,KAAa,SAAA5B,GAAI,OAChB,uBAAK0B,IAAK1B,EAAV,GAAmBsB,UAAU,wBAC3B,mBAAaO,QAAb,KAA0B7B,KAAMA,UAKxC,oBAtBJ","sources":["webpack://angelxehg.github.io/./src/hooks/use-pages.tsx","webpack://angelxehg.github.io/./src/pages/projects.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nexport interface RAWPage {\n  id: string\n  slug: string\n  excerpt: string\n  frontmatter: {\n    title: string\n    date: string\n    image: { childImageSharp: { gatsbyImageData: IGatsbyImageData } }\n    caption: string\n    stack: string[]\n    published: boolean\n  }\n}\n\nexport interface Page {\n  id: string\n  slug: string\n  date: string\n  title: string\n  excerpt: string\n  image: IGatsbyImageData\n  caption: string\n  stack: string[]\n  published: boolean\n}\n\nexport const toPage = (item: RAWPage): Page => {\n  const { id, slug, excerpt } = item\n  const { date, title, caption, stack, published } = item.frontmatter\n  return {\n    id,\n    slug,\n    date,\n    title,\n    excerpt,\n    caption,\n    stack,\n    published,\n    image: item.frontmatter.image.childImageSharp.gatsbyImageData,\n  }\n}\n\nexport const sortByDate = (a: Page, b: Page) => {\n  if (a.date < b.date) {\n    return 1\n  }\n  if (a.date > b.date) {\n    return -1\n  }\n  return 0\n}\n\nexport const usePages = (): Page[] => {\n  const { allMdx } = useStaticQuery(graphql`\n    query AllProjects {\n      allMdx {\n        nodes {\n          id\n          slug\n          excerpt(pruneLength: 35)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n            caption\n            stack\n            published\n          }\n        }\n      }\n    }\n  `)\n  const nodes: RAWPage[] = allMdx.nodes\n  return nodes\n    .map(toPage)\n    .sort(sortByDate)\n    .filter(i => i.published === true)\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../layouts/Layout\"\nimport DefaultFooter from \"../components/Footer\"\nimport SEO from \"../components/SEO\"\nimport { usePages, Page } from \"../hooks/use-pages\"\nimport DefaultNavbar from \"../components/Navbar\"\n\ninterface ProjectCardProps {\n  item: Page\n}\n\nconst ProjectCard = (\n  props: ProjectCardProps & { titleAs: \"h2\" | \"h3\" }\n): JSX.Element => {\n  const { slug, title, image, caption, stack } = props.item\n  return (\n    <Link to={`/${slug}`} style={{ textDecoration: 'none' }}>\n      <article className=\"card\" style={{ height: \"100%\" }}>\n        <GatsbyImage image={image} alt={caption} className=\"card-img-top\" />\n        <div className=\"card-body\">\n          {props.titleAs === \"h2\" && (\n            <h2 className=\"card-title h5\">{title}</h2>\n          )}\n          {props.titleAs === \"h3\" && (\n            <h3 className=\"card-title h5\">{title}</h3>\n          )}\n          <p className=\"card-text m-0\">{caption}</p>\n          <p className=\"card-text m-0\">\n            {stack.map(toolName => (\n              <span key={toolName} className=\"badge rounded-pill mt-1 me-1\">\n                {toolName}\n              </span>\n            ))}\n          </p>\n        </div>\n      </article>\n    </Link>\n  )\n}\n\nexport const ProjectsSection = () => {\n  const projects = usePages().slice(0, 4)\n  return (\n    <section id=\"projects\">\n      <h2>Mis Proyectos</h2>\n      <div className=\"row\">\n        {projects.map(item => (\n          <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n            <ProjectCard item={item} titleAs=\"h3\" />\n          </div>\n        ))}\n      </div>\n      <Link to=\"/projects\">Ver todos los proyectos</Link>\n    </section>\n  )\n}\n\nconst ProjectsPage = (): JSX.Element => {\n  const projects = usePages()\n  return (\n    <Layout>\n      <SEO title=\"Proyectos\" lang=\"es\" />\n      <DefaultNavbar />\n      <div className=\"hero\">\n        <div className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n          <Link to=\"/\">{\"< \"}Volver a Portafolio</Link>\n          <header className=\"mt-1\">\n            <h1>Todos mis proyectos</h1>\n            <p className=\"m-0\">Estos son todos mis proyectos p√∫blicos</p>\n          </header>\n        </div>\n      </div>\n      <main className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n        <div className=\"row\">\n          {projects.map(item => (\n            <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n              <ProjectCard titleAs=\"h2\" item={item} />\n            </div>\n          ))}\n        </div>\n      </main>\n      <DefaultFooter />\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n"],"names":["toPage","item","id","slug","excerpt","date","title","caption","stack","published","image","gatsbyImageData","sortByDate","a","b","usePages","useStaticQuery","i","ProjectCard","props","to","style","textDecoration","className","height","alt","toolName","key","ProjectsSection","projects","titleAs","lang"],"sourceRoot":""}