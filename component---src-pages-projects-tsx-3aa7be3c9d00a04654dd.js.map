{"version":3,"file":"component---src-pages-projects-tsx-3aa7be3c9d00a04654dd.js","mappings":"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","sources":["webpack://angelxehg.github.io/./src/components/Footer.tsx","webpack://angelxehg.github.io/./src/components/Navbar.tsx","webpack://angelxehg.github.io/./src/hooks/use-pages.tsx","webpack://angelxehg.github.io/./src/pages/projects.tsx","webpack://angelxehg.github.io/./src/layouts/Layout.jsx"],"sourcesContent":["import React from \"react\"\n\nimport { CreateLink } from \"./Link\"\n\nconst repoVer = {\n  title: \"v2.0.3\",\n  href: \"https://github.com/angelxehg/angelxehg.github.io/tree/v2.0.3\",\n}\n\nconst issueLink = {\n  title: \"Issues\",\n  href: \"https://github.com/angelxehg/angelxehg.github.io/issues\",\n}\n\nconst DefaultFooter = (): JSX.Element => (\n  <footer className=\"navbar\">\n    <div className=\"container-lg ps-sm-4 pe-sm-4\" style={{ display: \"block\" }}>\n      <p className=\"navbar-text m-0\">\n        © {new Date().getFullYear()}, Angel Hurtado @{\" \"}\n        <CreateLink from=\"GitHub\" extend={repoVer} />. Portafolio profesional\n        creado con <CreateLink from=\"GatsbyJS\" /> y{\" \"}\n        <CreateLink from=\"Bootstrap\" />. Reporta problemas o envía tus\n        sugerencias a la página <CreateLink from=\"GitHub\" extend={issueLink} />\n      </p>\n      <p className=\"navbar-text m-0\">\n        Las marcas y logotipos presentados en este sitio web pertenecen a sus\n        respectivos dueños. Iconos de <CreateLink from=\"FontAwesome\" />\n      </p>\n    </div>\n  </footer>\n)\n\nexport default DefaultFooter\n","import React, { useState } from \"react\"\nimport { Link } from \"gatsby\"\nimport { useTheme } from \"./Theme\"\n\nconst SunSVG = require(\"../assets/bootstrap-icons/sun.svg\")\nconst MoonSVG = require(\"../assets/bootstrap-icons/moon.svg\")\nconst ListSVG = require(\"../assets/bootstrap-icons/list.svg\")\n\nconst DefaultNavbar = (): JSX.Element => {\n  const { theme, toggle } = useTheme()\n  const [collapsed, setCollapsed] = useState(true)\n  return (\n    <nav className={`navbar sticky-top navbar-expand-md`}>\n      <div className=\"container-lg ps-sm-4 pe-sm-4\">\n        <Link to=\"/\" className=\"navbar-brand\">\n          Angel Hurtado\n        </Link>\n        <button\n          aria-label=\"Toggle Theme\"\n          onClick={toggle}\n          style={{ border: \"none\", background: \"none\" }}\n        >\n          {theme === \"dark\" && <MoonSVG className=\"btn-indigo\" />}\n          {theme === \"light\" && <SunSVG className=\"btn-orange\" />}\n        </button>\n        <button\n          className=\"navbar-toggler\"\n          type=\"button\"\n          data-bs-toggle=\"collapse\"\n          data-bs-target=\"#defaultNavbar\"\n          aria-controls=\"defaultNavbar\"\n          aria-expanded=\"false\"\n          aria-label=\"Toggle navigation\"\n          onClick={() => setCollapsed(!collapsed)}\n        >\n          <ListSVG\n            style={{\n              height: \"1.8rem\",\n              width: \"1.8rem\",\n            }}\n          />\n        </button>\n        <div\n          className={collapsed ? \"collapse navbar-collapse\" : \"navbar-collapse\"}\n          id=\"defaultNavbar\"\n        >\n          <ul className=\"navbar-nav me-auto\"></ul>\n          <ul className=\"navbar-nav\">\n            <li className=\"nav-item\">\n              <Link to=\"/#about\" className=\"nav-link text-reset\">\n                Acerca de\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/#skills\" className=\"nav-link text-reset\">\n                Habilidades\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/projects\" className=\"nav-link text-reset\">\n                Proyectos\n              </Link>\n            </li>\n            <li className=\"nav-item\">\n              <Link to=\"/posts\" className=\"nav-link text-reset\">\n                Blog\n              </Link>\n            </li>\n          </ul>\n        </div>\n      </div>\n    </nav>\n  )\n}\n\nexport default DefaultNavbar\n","import { graphql, useStaticQuery } from \"gatsby\"\nimport { IGatsbyImageData } from \"gatsby-plugin-image\"\n\nexport interface RAWPage {\n  id: string\n  slug: string\n  excerpt: string\n  frontmatter: {\n    title: string\n    date: string\n    image: { childImageSharp: { gatsbyImageData: IGatsbyImageData } }\n    caption: string\n    stack: string[]\n    published: boolean\n  }\n}\n\nexport interface Page {\n  id: string\n  slug: string\n  date: string\n  title: string\n  excerpt: string\n  image: IGatsbyImageData\n  caption: string\n  stack: string[]\n  published: boolean\n}\n\nexport const toPage = (item: RAWPage): Page => {\n  const { id, slug, excerpt } = item\n  const { date, title, caption, stack, published } = item.frontmatter\n  return {\n    id,\n    slug,\n    date,\n    title,\n    excerpt,\n    caption,\n    stack,\n    published,\n    image: item.frontmatter.image.childImageSharp.gatsbyImageData,\n  }\n}\n\nexport const sortByDate = (a: Page, b: Page) => {\n  if (a.date < b.date) {\n    return 1\n  }\n  if (a.date > b.date) {\n    return -1\n  }\n  return 0\n}\n\nexport const usePages = (): Page[] => {\n  const { allMdx } = useStaticQuery(graphql`\n    query AllProjects {\n      allMdx {\n        nodes {\n          id\n          slug\n          excerpt(pruneLength: 35)\n          frontmatter {\n            title\n            date(formatString: \"YYYY-MM-DD\")\n            image {\n              childImageSharp {\n                gatsbyImageData(layout: FULL_WIDTH)\n              }\n            }\n            caption\n            stack\n            published\n          }\n        }\n      }\n    }\n  `)\n  const nodes: RAWPage[] = allMdx.nodes\n  return nodes\n    .map(toPage)\n    .sort(sortByDate)\n    .filter(i => i.published === true)\n}\n","import React from \"react\"\nimport { Link } from \"gatsby\"\nimport { GatsbyImage } from \"gatsby-plugin-image\"\n\nimport Layout from \"../layouts/Layout\"\nimport DefaultFooter from \"../components/Footer\"\nimport SEO from \"../components/SEO\"\nimport { usePages, Page } from \"../hooks/use-pages\"\nimport DefaultNavbar from \"../components/Navbar\"\nimport { CreateBadge } from \"../components/Link\"\n\ninterface ProjectCardProps {\n  item: Page\n}\n\nconst ProjectCard = (\n  props: ProjectCardProps & { titleAs: \"h2\" | \"h3\" }\n): JSX.Element => {\n  const { slug, title, image, caption, stack } = props.item\n  return (\n    <article className=\"card\" style={{ height: \"100%\" }}>\n      <GatsbyImage image={image} alt={caption} className=\"card-img-top\" />\n      <div className=\"card-body\">\n        {props.titleAs === \"h2\" && (\n          <h2 className=\"card-title h5\">\n            <Link to={`/${slug}`}>{title}</Link>\n          </h2>\n        )}\n        {props.titleAs === \"h3\" && (\n          <h3 className=\"card-title h5\">\n            <Link to={`/${slug}`}>{title}</Link>\n          </h3>\n        )}\n        <p className=\"card-text m-0\">{caption}</p>\n        <p className=\"card-text m-0\">\n          {stack.map(toolName => (\n            <CreateBadge key={toolName} from={toolName} />\n          ))}\n        </p>\n      </div>\n    </article>\n  )\n}\n\nexport const ProjectsSection = () => {\n  const projects = usePages().slice(0, 2)\n  return (\n    <section id=\"projects\">\n      <h2>\n        Últimos <Link to=\"/projects\">proyectos</Link>:\n      </h2>\n      <div className=\"row\">\n        {projects.map(item => (\n          <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n            <ProjectCard item={item} titleAs=\"h3\" />\n          </div>\n        ))}\n      </div>\n      <Link to=\"/projects\">Ver todos los proyectos {\">\"}</Link>\n    </section>\n  )\n}\n\nconst ProjectsPage = (): JSX.Element => {\n  const projects = usePages()\n  return (\n    <Layout>\n      <SEO title=\"Proyectos\" lang=\"es\" />\n      <DefaultNavbar />\n      <div className=\"hero\">\n        <div className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n          <Link to=\"/\">{\"< \"}Volver a Portafolio</Link>\n          <header className=\"mt-1\">\n            <h1>Todos mis proyectos</h1>\n            <p className=\"m-0\">Estos son todos mis proyectos públicos</p>\n          </header>\n        </div>\n      </div>\n      <main className=\"container-lg ps-sm-4 pe-sm-4 pt-3 pb-3\">\n        <div className=\"row\">\n          {projects.map(item => (\n            <div key={item.id} className=\"col-lg-6 p-sm-1 pb-3\">\n              <ProjectCard titleAs=\"h2\" item={item} />\n            </div>\n          ))}\n        </div>\n      </main>\n      <DefaultFooter />\n    </Layout>\n  )\n}\n\nexport default ProjectsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport { MDXProvider } from \"@mdx-js/react\"\n\nimport { ThemeContextProvider } from \"../components/Theme\"\nimport { CreateLink, CreateBadge } from \"../components/Link\"\n\nconst shortcodes = { CreateLink, CreateBadge }\n\nconst Layout = props => (\n  <ThemeContextProvider>\n    <MDXProvider components={shortcodes}>{props.children}</MDXProvider>\n  </ThemeContextProvider>\n)\n\nLayout.propTypes = {\n  children: PropTypes.oneOfType([\n    PropTypes.arrayOf(PropTypes.node),\n    PropTypes.node,\n  ]).isRequired,\n}\n\nexport default Layout\n"],"names":["repoVer","title","href","issueLink","className","style","display","Date","getFullYear","from","extend","SunSVG","require","MoonSVG","ListSVG","useTheme","theme","toggle","useState","collapsed","setCollapsed","Link","to","onClick","border","background","type","height","width","id","toPage","item","slug","excerpt","frontmatter","date","caption","stack","published","image","childImageSharp","gatsbyImageData","sortByDate","a","b","usePages","useStaticQuery","allMdx","nodes","map","sort","filter","i","ProjectCard","props","G","alt","titleAs","toolName","key","ProjectsSection","projects","slice","Layout","SEO","lang","shortcodes","CreateLink","CreateBadge","MDXProvider","components","children"],"sourceRoot":""}